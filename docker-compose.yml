version: "2"
services:
  nginx:
    image: nginx:alpine
    container_name: budget_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certificates:/etc/certificates
    links:
      - budget:budget
    networks:
      - net_budget_dev
    ports:
      - ${PORT}:80
      - ${PORT_SECURE}:443
    env_file:
      - .env
  budget:
    container_name: budget
    build:
      context: .
    depends_on:
      - base
    volumes:
      - .:/app
      - /app/node_modules
    links:
      - db:db
    networks:
      - net_budget_dev
    expose:
      - 3000
    ports:
      - 9229:9229
    env_file:
      - .env
    environment:
      NODE_ENV: development
      DEBUG: ${DEBUG}
      SKIP_APP: ${SKIP_APP}
      PORT: 3000
      DATABASE_URL: postgres://docker:docker@db:5432/budget
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DEFAULT_PIN: 1234
  base:
    image: docker.fela.space/budget_base:latest
    build:
      context: .
  db:
    restart: always
    image: postgres:10-alpine
    networks:
      - net_budget_dev
    ports:
      - ${DB_PORT_BUDGET_DEV:-5432}:5432
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    restart: always
    image: redis:6-alpine
    networks:
      - net_budget_dev
    ports:
      - 6380:6379

  visual:
    build:
      context: .
      dockerfile: visual.Dockerfile
    volumes:
      - "./src:/app/src"
    command: sh -c "yarn test:visual"

  visual_update_snapshots:
    build:
      context: .
      dockerfile: visual.Dockerfile
    volumes:
      - "./src:/app/src"
    command: sh -c "yarn test:visual -u"

networks:
  net_budget_dev:
    driver: bridge
