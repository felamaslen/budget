---
    swagger: '2.0'
    info:
        title: 'Budget 3.0 API'
        version: '3.0.0-1'
        description:    |
                        
                        This document contains the API resources rquired for the Budget 3.0 API.
    
                        ## Response Format
    
                        This RESTful format should apply to *all* endpoints.
    
                        # Success
                        
                        Successful responses should return a `2xx` status code with the response in body.data. There should be no additional fields except those as defined in this spec for that endpoint.
    
                        # Failure
    
                        Failed responses (either due to a server error, or other error) should return a status code to indicate an error. Any errors should be included in the response body where possible.
    
                        Any specific status codes and error codes will be documented for that endpoint in this spec.
    
                        * Data validation errors should be indicated by a `400` status code
                        * Server errors should be indicated by `5xx` status codes
    
                        ## ISO standard strings
    
                        ISO standard strings should be used wherever possible.
    
                        All dates should be represented as ISO 8601 strings as per http://www.iso.org/iso/home/standards/iso8601.htm ([further info](https://en.wikipedia.org/wiki/ISO_8601).)
    
                        * date and time `yyyy-MM-dd'T'HH:mm:ss.SSS`
                        * date `yyyy-MM-dd`
                        * All currencies should be represented by ISO 4217 codes as per http://www.iso.org/iso/home/standards/currency_codes.htm [[Complete listing](https://en.wikipedia.org/wiki/ISO_4217)]
                        * currency units: lowest (e.g. GBX), integers
    
        contact:
            email: 'felamaslen@gmail.com'
        license:
          name: 'MIT'
          url: 'https://opensource.org/licenses/MIT'
    
    # tags are used for organising operations
    tags:
        - name: Purchase
          description: Resources related to purchased items
    
    paths:
        /user/login:
            post:
                summary: Get an API key for logging in
                operationId: login
                description: |
                    Log in to the app
                produces:
                - application/json
                parameters:
                - in: body
                  name: pin
                  description: The PIN of the user to retrieve an API key for
                  required: true
                  type: string
                responses:
                    201:
                        description: successful login
                        schema:
                            type: object
                            properties:
                                error:
                                    type: boolean
                                    example: false
                                api_key:
                                    type: string
                                    example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
                                uid:
                                    type: number
                                    example: 1
                                name:
                                    type: string
                                    example: user1
                    401:
                        description: unsuccessful login
                        schema:
                            type: object
                            properties:
                                error:
                                    type: boolean
                                    example: true
                                errorText:
                                    type: string
                                    example: Bad PIN
        /data/overview:
            get:
                sumary: Get overview budget data
                operationId: getDataOverview
                description: |
                    Get monthly cash flow data, broken down into categories
                produces:
                - application/json
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        endYearMonth:
                                            type: array
                                            example: [2018,9]
                                        currentYear:
                                            type: integer
                                            example: 2017,
                                        startYearMonth:
                                            type: array
                                            example: [2015,8]
                                        cost:
                                            type: object
                                            properties:
                                                balance:
                                                    type: array
                                                    description: Balance for the displayed months
                                                    example: [488932, 916589, 1055601]
                                                old:
                                                    type: array
                                                    description: Balance for the months preceding the displayed data
                                                    example: [140000, 235686]
                                                income:
                                                    type: array
                                                    example: [180000, 200000]
                                                funds:
                                                    type: array
                                                    example: [180000, 200000]
                                                bills:
                                                    type: array
                                                    example: [72500, 5800]
                                                food:
                                                    type: array
                                                    example: [154, 506, 366, 472]
                                                general:
                                                    type: array
                                                    example: [15000, 110, 9086]
                                                social:
                                                    type: array
                                                    example: [2300]
                                                holiday:
                                                    type: array
                                                    example: [70000, 16000]
                                        futureMonths:
                                            type: integer
                                            example: 12
                                        currentMonth:
                                            type: integer
                                            example: 9

        /data/analysis/{period}/{groupBy}/{pageIndex}:
            get:
                summary: Get analysis data
                operationId: getDataAnalysis
                description: |
                    Get weekly / monthly / yearly analysis data, broken down into paged categories
                produces:
                - application/json
                parameters:
                - in: path
                  name: period
                  description: one of week, month, year
                  required: true
                  type: string
                - in: path
                  name: groupBy
                  description: one of category, shop
                  required: true
                  type: string
                - in: path
                  name: pageIndex
                  description: page to retrieve, starting with 0
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        cost:
                                            type: array
                                            items:
                                                type: array
                                                example: ["bills", [6500, 12300]]

        /data/{dataType}:
            get:
                summary: Get budget data
                operationId: getData
                description: |
                    Get all kinds of data for display in the budget app
                produces:
                - application/json
                parameters:
                - in: path
                  name: dataType
                  description: The type of data to get
                  required: true
                  type: string
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
                    400:
                        description: invalid data type
                    401:
                        description: unauthorised
        /search/{dataType}/{column}/{searchTerm}/{numResults}:
            get:
                summary: Search suggestions
                operationId: search
                description: |
                    Get search suggestions for data input
                produces:
                - application/json
                parameters:
                - in: path
                  name: dataType
                  description: The type of data to get
                  required: true
                  type: string
                - in: path
                  name: column
                  description: The column of data to search
                  required: true
                  type: string
                - in: path
                  name: searchTerm
                  description: The term to search for
                  required: true
                  type: string
                - in: path
                  name: numResults
                  description: The number of results to return
                  required: false
                  type: number
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                error:
                                    type: boolean
                                    example: false
                                data:
                                    type: object
                                    properties:
                                        list:
                                            type: array
                                            items:
                                                type: string
                    401:
                        description: unauthorised
    definitions:
        DataResponse:
            type: object
            properties:
                error:
                    type: boolean
                    example: false
    host: budget.bristol.fela.london
    basePath: /api
    schemes:
        - https
