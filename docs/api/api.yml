---
    swagger: '2.0'
    info:
        title: 'Budget 3.0 API'
        version: '3.0.0-1'
        description:    |
                        
                        This document contains the API resources rquired for the Budget 3.0 API.
    
                        ## Response Format
    
                        This RESTful format should apply to *all* endpoints.
    
                        # Success
                        
                        Successful responses should return a `2xx` status code with the response in body.data. There should be no additional fields except those as defined in this spec for that endpoint.
    
                        # Failure
    
                        Failed responses (either due to a server error, or other error) should return a status code to indicate an error. Any errors should be included in the response body where possible.
    
                        Any specific status codes and error codes will be documented for that endpoint in this spec.
    
                        * Data validation errors should be indicated by a `400` status code
                        * Server errors should be indicated by `5xx` status codes
    
                        ## ISO standard strings
    
                        ISO standard strings should be used wherever possible.
    
                        All dates should be represented as ISO 8601 strings as per http://www.iso.org/iso/home/standards/iso8601.htm ([further info](https://en.wikipedia.org/wiki/ISO_8601).)
    
                        * date and time `yyyy-MM-dd'T'HH:mm:ss.SSS`
                        * date `yyyy-MM-dd`
                        * All currencies should be represented by ISO 4217 codes as per http://www.iso.org/iso/home/standards/currency_codes.htm [[Complete listing](https://en.wikipedia.org/wiki/ISO_4217)]
                        * currency units: lowest (e.g. GBX), integers
    
        contact:
            email: 'felamaslen@gmail.com'
        license:
          name: 'MIT'
          url: 'https://opensource.org/licenses/MIT'
    
    # tags are used for organising operations
    tags:
        - name: Purchase
          description: Resources related to purchased items
    
    paths:
        /data/{dataType}:
            get:
                summary: Get budget data
                operationId: getData
                description: |
                    Get all kinds of data for display in the budget app
                produces:
                - application/json
                parameters:
                - in: path
                  name: dataType
                  description: The type of data to get
                  required: true
                  type: string
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
                    400:
                        description: invalid data type
    definitions:
        DataResponse:
            type: object
            properties:
                error:
                    type: boolean
                    example: false
    host: budget.bristol.fela.london
    basePath: /api
    schemes:
        - https
