---
    swagger: '2.0'
    info:
        title: 'Budget 3.0 API'
        version: '3.0.0-1'
        description:    |
                        
                        This document contains the API resources rquired for the Budget 3.0 API.
    
                        ## Response Format
    
                        This RESTful format should apply to *all* endpoints.
    
                        # Success
                        
                        Successful responses should return a `2xx` status code with the response in body.data. There should be no additional fields except those as defined in this spec for that endpoint.
    
                        # Failure
    
                        Failed responses (either due to a server error, or other error) should return a status code to indicate an error. Any errors should be included in the response body where possible.
    
                        Any specific status codes and error codes will be documented for that endpoint in this spec.
    
                        * Data validation errors should be indicated by a `400` status code
                        * Server errors should be indicated by `5xx` status codes
    
                        ## ISO standard strings
    
                        ISO standard strings should be used wherever possible.
    
                        All dates should be represented as ISO 8601 strings as per http://www.iso.org/iso/home/standards/iso8601.htm ([further info](https://en.wikipedia.org/wiki/ISO_8601).)
    
                        * date and time `yyyy-MM-dd'T'HH:mm:ss.SSS`
                        * date `yyyy-MM-dd`
                        * All currencies should be represented by ISO 4217 codes as per http://www.iso.org/iso/home/standards/currency_codes.htm [[Complete listing](https://en.wikipedia.org/wiki/ISO_4217)]
                        * currency units: lowest (e.g. GBX), integers
    
        contact:
            email: 'felamaslen@gmail.com'
        license:
          name: 'MIT'
          url: 'https://opensource.org/licenses/MIT'
    
    # tags are used for organising operations
    tags:
        - name: authentication
          description: Resources related to application authentication
        - name: overview
          description: Resources related to cash flow data
        - name: analysis
          description: Resources related to analysis data
        - name: funds
          description: Resources related to funds data
        - name: income
          description: Resources related to income data
        - name: bills
          description: Resources related to bills data
        - name: food
          description: Resources related to food data
        - name: general
          description: Resources related to general data
        - name: social
          description: Resources related to social data
        - name: holiday
          description: Resources related to holiday data
    
    paths:
        /user/login:
            post:
                summary: Get an API key for logging in
                tags:
                    - authentication
                operationId: login
                description: |
                    Log in to the app
                produces:
                - application/json
                parameters:
                - in: body
                  name: pin
                  description: The PIN of the user to retrieve an API key for
                  required: true
                  type: string
                responses:
                    201:
                        description: successful login
                        schema:
                            type: object
                            properties:
                                error:
                                    type: boolean
                                    example: false
                                api_key:
                                    type: string
                                    example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
                                uid:
                                    type: number
                                    example: 1
                                name:
                                    type: string
                                    example: user1
                    401:
                        description: unsuccessful login
                        schema:
                            type: object
                            properties:
                                error:
                                    type: boolean
                                    example: true
                                errorText:
                                    type: string
                                    example: Bad PIN
        
        /data/overview:
            get:
                summary: Get overview budget data
                tags:
                    - overview
                operationId: getDataOverview
                description: |
                    Get monthly cash flow data, broken down into categories
                produces:
                - application/json
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        endYearMonth:
                                            type: array
                                            example: [2018,9]
                                        currentYear:
                                            type: integer
                                            example: 2017,
                                        startYearMonth:
                                            type: array
                                            example: [2015,8]
                                        cost:
                                            type: object
                                            properties:
                                                balance:
                                                    type: array
                                                    description: Balance for the displayed months
                                                    example: [488932, 916589, 1055601]
                                                old:
                                                    type: array
                                                    description: Balance for the months preceding the displayed data
                                                    example: [140000, 235686]
                                                income:
                                                    type: array
                                                    example: [180000, 200000]
                                                funds:
                                                    type: array
                                                    example: [180000, 200000]
                                                bills:
                                                    type: array
                                                    example: [72500, 5800]
                                                food:
                                                    type: array
                                                    example: [154, 506, 366, 472]
                                                general:
                                                    type: array
                                                    example: [15000, 110, 9086]
                                                social:
                                                    type: array
                                                    example: [2300]
                                                holiday:
                                                    type: array
                                                    example: [70000, 16000]
                                        futureMonths:
                                            type: integer
                                            example: 12
                                        currentMonth:
                                            type: integer
                                            example: 9
        /data/balance:
            post:
                summary: Insert balance data
                tags:
                    - overview
                operationId: postDataBalance
                description: |
                    Insert balance data for a year/month
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: integer
                  required: true
                - in: body
                  name: month
                  type: integer
                  required: true
                - in: body
                  name: balance
                  type: integer
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
            put:
                summary: Update balance data
                tags:
                    - overview
                operationId: putDataBalance
                description: |
                    Update balance data for year/month
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: integer
                  required: true
                - in: body
                  name: month
                  type: integer
                  required: true
                - in: body
                  name: balance
                  type: integer
                  required: true
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"

        /data/analysis/{period}/{groupBy}/{pageIndex}:
            get:
                summary: Get analysis data
                tags:
                    - analysis
                operationId: getDataAnalysis
                description: |
                    Get weekly / monthly / yearly analysis data, broken down into paged categories
                produces:
                - application/json
                parameters:
                - in: path
                  name: period
                  description: one of week, month, year
                  required: true
                  type: string
                - in: path
                  name: groupBy
                  description: one of category, shop
                  required: true
                  type: string
                - in: path
                  name: pageIndex
                  description: page to retrieve, starting with 0
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        cost:
                                            type: array
                                            items:
                                                type: array
                                                example: ["bills", [6500, 12300]]
        /data/analysis/deep/{category}/{period}/{groupBy}/{pageIndex}:
            get:
                summary: Get deep analysis data
                tags:
                    - analysis
                operationId: getDataAnalysisDeep
                description: |
                    Get weekly / monthly / yearly analysis data, broken down by category into paged items
                produces:
                - application/json
                parameters:
                - in: path
                  name: category
                  description: category of data to retrieve
                  required: true
                  type: string
                - in: path
                  name: period
                  description: one of week, month, year
                  required: true
                  type: string
                - in: path
                  name: groupBy
                  description: one of category, shop
                  required: true
                  type: string
                - in: path
                  name: pageIndex
                  description: page to retrieve, starting with 0
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        items:
                                            type: array
                                            example: ["bills", [["Electricity", 6500], ["Water", 12300]]]

        /data/stocks:
            get:
                summary: Get stocks data
                tags:
                    - funds
                operationId: getDataStocks
                description: |
                    Get a weighted list of stocks holdings
                produces:
                - application/json
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        total:
                                            type: integer
                                            description: total weight
                                        stocks:
                                            type: array
                                            items:
                                                type: array
                                                example: ["NASDAQ:GOOGL", "Alphabet Inc Class A", 11239]
        /data/funds:
            get:
                summary: Get funds data
                tags:
                    - funds
                operationId: getDataFunds
                description: |
                    Get a list of fund holdings, optionally with price history
                produces:
                - application/json
                parameters:
                - in: query
                  name: history
                  description: whether or not to retrieve price history with holdings data
                  required: false
                  type: boolean
                - in: query
                  name: period
                  description: period of time to retrieve price history over
                  required: false
                  type: string
                  example: year
                - in: query
                  name: length
                  description: number of periods to retrive price history for
                  required: false
                  type: integer
                  example: 3
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                data:
                                    type: object
                                    properties:
                                        total:
                                            type: integer
                                            example: 1000000
                                            description: Total-to-date purchase cost of all holdings
                                        data:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    I:
                                                        type: integer
                                                        example: 11
                                                        description: ID of holding
                                                    c:
                                                        type: integer
                                                        example: 50000
                                                        description: To-date cost of this holding
                                                    d:
                                                        type: array
                                                        example: [2017, 4, 1]
                                                        description: Date of first purchase
                                                    i:
                                                        type: string
                                                        example: Gold ETF
                                                        description: Name of holding
                                                    tr:
                                                        type: array
                                                        description: List of transactions for this holding
                                                        items:
                                                            type: array
                                                            items:
                                                                type: object
                                                                properties:
                                                                    c:
                                                                        type: integer
                                                                        description: Cost of transaction
                                                                        example: 200000
                                                                    u:
                                                                        type: float
                                                                        description: Units purchased (or sold)
                                                                        example: 1499.7
                                                                    d:
                                                                        type: array
                                                                        description: Date of transaction
                                                                        example: [2016, 9, 21]
                                                    pr:
                                                        type: array
                                                        example: [103.4, 102.97, 103.94]
                                                        description: List of cached asset prices
                                                    prStartIndex:
                                                        type: integer
                                                        example: 1
                                                        description: Where in the list of price-cache times this holding first appears
                                        startTime:
                                            type: integer
                                            description: Timestamp of the first price cache time
                                            example: 1475661661
                                        cacheTimes:
                                            type: array
                                            description: Timestamps of all of the price cache times, relative to startTime
                                            example: [0, 259200, 518400]

            post:
                summary: Insert funds data
                tags:
                    - funds
                operationId: postDataFunds
                description: |
                    Insert a new fund holding into the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  required: true
                  type: number
                - in: body
                  name: month
                  required: true
                  type: number
                - in: body
                  name: date
                  required: true
                  type: number
                - in: body
                  name: item
                  required: true
                  type: string
                - in: body
                  name: transactions
                  required: true
                  type: array
                - in: body
                  name: cost
                  required: true
                  type: integer
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"

            put:
                summary: Update funds data
                tags:
                    - funds
                operationId: putDataFunds
                description: |
                    Update an existing fund holding in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                - in: body
                  name: year
                  required: true
                  type: number
                - in: body
                  name: month
                  required: true
                  type: number
                - in: body
                  name: date
                  required: true
                  type: number
                - in: body
                  name: item
                  required: false
                  type: string
                - in: body
                  name: transactions
                  required: false
                  type: array
                - in: body
                  name: cost
                  required: false
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"

            delete:
                summary: Delete funds data
                tags:
                    - funds
                operationId: deleteDataFunds
                description: |
                    Delete an existing fund holding in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"

        /data/income/{page}:
            get:
                summary: Get income data
                tags:
                    - income
                operationId: getDataIncome
                description: |
                    Get list of income
                produces:
                - application/json
                parameters:
                - in: path
                  name: page
                  description: Page of data to get (starts at 0)
                  type: number
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
        /data/income:
            post:
                summary: Add income data
                tags:
                    - income
                operationId: postDataIncome
                description: |
                    Post new income item
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: number
                  required: true
                - in: body
                  name: month
                  type: number
                  required: true
                - in: body
                  name: date
                  type: number
                  required: true
                - in: body
                  name: item
                  type: string
                  required: true
                - in: body
                  name: cost
                  type: number
                  description: Value of income
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"
            
            put:
                summary: Modify income data
                tags:
                    - income
                operationId: putDataIncome
                description: |
                    Edit existing income item
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  type: number
                  requierd: true
                - in: body
                  name: year
                  type: number
                  required: false
                - in: body
                  name: month
                  type: number
                  required: false
                - in: body
                  name: date
                  type: number
                  required: false
                - in: body
                  name: item
                  type: string
                  required: false
                - in: body
                  name: cost
                  type: number
                  description: Value of income
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
            
            delete:
                summary: Delete income data
                tags:
                    - income
                operationId: deleteDataIncome
                description: |
                    Delete an existing income item in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"
        
        /data/bills/{page}:
            get:
                summary: Get bills data
                tags:
                    - bills
                operationId: getDataBills
                description: |
                    Get list of bills
                produces:
                - application/json
                parameters:
                - in: path
                  name: page
                  description: Page of data to get (starts at 0)
                  type: number
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
        /data/bills:
            post:
                summary: Add bills data
                tags:
                    - bills
                operationId: postDataBills
                description: |
                    Post new bills item
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: number
                  required: true
                - in: body
                  name: month
                  type: number
                  required: true
                - in: body
                  name: date
                  type: number
                  required: true
                - in: body
                  name: item
                  type: string
                  required: true
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"
            
            put:
                summary: Modify bills data
                tags:
                    - bills
                operationId: putDataBills
                description: |
                    Edit existing bills item
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  type: number
                  requierd: true
                - in: body
                  name: year
                  type: number
                  required: false
                - in: body
                  name: month
                  type: number
                  required: false
                - in: body
                  name: date
                  type: number
                  required: false
                - in: body
                  name: item
                  type: string
                  required: false
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
            
            delete:
                summary: Delete bills data
                tags:
                    - bills
                operationId: deleteDataBills
                description: |
                    Delete an existing bills item in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"
        
        /data/food/{page}:
            get:
                summary: Get food data
                tags:
                    - food
                operationId: getDataFood
                description: |
                    Get list of food
                produces:
                - application/json
                parameters:
                - in: path
                  name: page
                  description: Page of data to get (starts at 0)
                  type: number
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
        /data/food:
            post:
                summary: Add food data
                tags:
                    - food
                operationId: postDataFood
                description: |
                    Post new food item
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: number
                  required: true
                - in: body
                  name: month
                  type: number
                  required: true
                - in: body
                  name: date
                  type: number
                  required: true
                - in: body
                  name: item
                  type: string
                  required: true
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"
            
            put:
                summary: Modify food data
                tags:
                    - food
                operationId: putDataFood
                description: |
                    Edit existing food item
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  type: number
                  requierd: true
                - in: body
                  name: year
                  type: number
                  required: false
                - in: body
                  name: month
                  type: number
                  required: false
                - in: body
                  name: date
                  type: number
                  required: false
                - in: body
                  name: item
                  type: string
                  required: false
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
            
            delete:
                summary: Delete food data
                tags:
                    - food
                operationId: deleteDataFood
                description: |
                    Delete an existing food item in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"
        
        /data/general/{page}:
            get:
                summary: Get general data
                tags:
                    - general
                operationId: getDataGeneral
                description: |
                    Get list of general items
                produces:
                - application/json
                parameters:
                - in: path
                  name: page
                  description: Page of data to get (starts at 0)
                  type: number
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
        /data/general:
            post:
                summary: Add general data
                tags:
                    - general
                operationId: postDataGeneral
                description: |
                    Post new general item
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: number
                  required: true
                - in: body
                  name: month
                  type: number
                  required: true
                - in: body
                  name: date
                  type: number
                  required: true
                - in: body
                  name: item
                  type: string
                  required: true
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"
            
            put:
                summary: Modify general data
                tags:
                    - general
                operationId: putDataGeneral
                description: |
                    Edit existing general item
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  type: number
                  requierd: true
                - in: body
                  name: year
                  type: number
                  required: false
                - in: body
                  name: month
                  type: number
                  required: false
                - in: body
                  name: date
                  type: number
                  required: false
                - in: body
                  name: item
                  type: string
                  required: false
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
            
            delete:
                summary: Delete general data
                tags:
                    - general
                operationId: deleteDataGeneral
                description: |
                    Delete an existing general item in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"
        
        /data/social/{page}:
            get:
                summary: Get social data
                tags:
                    - social
                operationId: getDataSocial
                description: |
                    Get list of social items
                produces:
                - application/json
                parameters:
                - in: path
                  name: page
                  description: Page of data to get (starts at 0)
                  type: number
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
        /data/social:
            post:
                summary: Add social data
                tags:
                    - social
                operationId: postDataSocial
                description: |
                    Post new social item
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: number
                  required: true
                - in: body
                  name: month
                  type: number
                  required: true
                - in: body
                  name: date
                  type: number
                  required: true
                - in: body
                  name: item
                  type: string
                  required: true
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"
            
            put:
                summary: Modify social data
                tags:
                    - social
                operationId: putDataSocial
                description: |
                    Edit existing social item
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  type: number
                  requierd: true
                - in: body
                  name: year
                  type: number
                  required: false
                - in: body
                  name: month
                  type: number
                  required: false
                - in: body
                  name: date
                  type: number
                  required: false
                - in: body
                  name: item
                  type: string
                  required: false
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
            
            delete:
                summary: Delete social data
                tags:
                    - social
                operationId: deleteDataSocial
                description: |
                    Delete an existing social item in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"
        
        /data/holiday/{page}:
            get:
                summary: Get holiday data
                tags:
                    - holiday
                operationId: getDataHoliday
                description: |
                    Get list of holiday items
                produces:
                - application/json
                parameters:
                - in: path
                  name: page
                  description: Page of data to get (starts at 0)
                  type: number
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponse"
        /data/holiday:
            post:
                summary: Add holiday data
                tags:
                    - holiday
                operationId: postDataHoliday
                description: |
                    Post new holiday item
                produces:
                - application/json
                parameters:
                - in: body
                  name: year
                  type: number
                  required: true
                - in: body
                  name: month
                  type: number
                  required: true
                - in: body
                  name: date
                  type: number
                  required: true
                - in: body
                  name: item
                  type: string
                  required: true
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: true
                responses:
                    201:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePostList"
            
            put:
                summary: Modify holiday data
                tags:
                    - holiday
                operationId: putDataHoliday
                description: |
                    Edit existing holiday item
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  type: number
                  requierd: true
                - in: body
                  name: year
                  type: number
                  required: false
                - in: body
                  name: month
                  type: number
                  required: false
                - in: body
                  name: date
                  type: number
                  required: false
                - in: body
                  name: item
                  type: string
                  required: false
                - in: body
                  name: cost
                  type: number
                  description: Cost of item
                  required: false
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
            
            delete:
                summary: Delete holiday data
                tags:
                    - holiday
                operationId: deleteDataHoliday
                description: |
                    Delete an existing holiday item in the database
                produces:
                - application/json
                parameters:
                - in: body
                  name: id
                  required: true
                  type: integer
                responses:
                    200:
                        description: successful operation
                        schema:
                            $ref: "#/definitions/DataResponsePutList"
                    400:
                        description: invalid id
                        schema:
                            $ref: "#/definitions/ErrorResponse"
        
        /search/{dataType}/{column}/{searchTerm}/{numResults}:
            get:
                summary: Search suggestions
                operationId: search
                description: |
                    Get search suggestions for data input
                produces:
                - application/json
                parameters:
                - in: path
                  name: dataType
                  description: The type of data to get
                  required: true
                  type: string
                - in: path
                  name: column
                  description: The column of data to search
                  required: true
                  type: string
                - in: path
                  name: searchTerm
                  description: The term to search for
                  required: true
                  type: string
                - in: path
                  name: numResults
                  description: The number of results to return
                  required: false
                  type: number
                responses:
                    200:
                        description: successful operation
                        schema:
                            type: object
                            properties:
                                error:
                                    type: boolean
                                    example: false
                                data:
                                    type: object
                                    properties:
                                        list:
                                            type: array
                                            items:
                                                type: string
    definitions:
        ErrorResponse:
            type: object
            properties:
                error:
                    type: boolean
                    example: true
                errorMessage:
                    type: string
                    example: An error occurred

        DataResponse:
            type: object
            properties:
                error:
                    type: boolean
                    example: false
                data:
                    type: object
                    properties:
                        total:
                            type: number
                            description: Total cost of all list items since the beginning of time
                        data:
                            type: array
                            items:
                                type: object
                                properties:
                                    I:
                                        type: number
                                        description: ID
                                    d:
                                        type: array
                                        description: Date
                                        example: [2017, 9, 5]
                                    i:
                                        type: string
                                        description: Item
                                    c:
                                        type: number
                                        description: Value
        DataResponsePostList:
            type: object
            properties:
                id:
                    type: integer
                    example: 18281
                    description: newly-inserted ID
                total:
                    type: integer
                    example: 481829
                    description: new total cost of list data
                error:
                    type: boolean
                    example: false
        DataResponsePutList:
            type: object
            properties:
                total:
                    type: integer
                    example: 1912391
                    description: new total cost of list data
                error:
                    type: boolean
                    example: false

